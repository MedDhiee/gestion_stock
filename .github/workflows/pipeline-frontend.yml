name: gestion-stock Frontend Pipeline

on:
  push:
    branches:
      - master
    paths:
      - gestion_stock_ui/hb_electronics/**
      - Docker/frontend/**
      - 'docker-compose.yml'
      - .github/workflows/*-frontend.yml

jobs:
  build-image:
    name: Build FE Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract project version
        id: extract_version
        run: |
          cd gestion_stock_ui/hb_electronics
          echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: gestion_stock_ui/hb_electronics
          file: Docker/frontend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/gestiondestock-ui:latest,${{ secrets.DOCKERHUB_USERNAME }}/gestiondestock-ui:${{ steps.extract_version.outputs.VERSION }}

  sonarqube-analysis:
    name: SonarQube Frontend Analysis
    runs-on: ubuntu-latest
    needs: [build-image]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install SonarScanner CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip openjdk-17-jre
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner-cli-5.0.1.3006-linux.zip
          sudo mv sonar-scanner-5.0.1.3006-linux /opt/sonar-scanner
          sudo ln -s /opt/sonar-scanner/bin/sonar-scanner /usr/local/bin/sonar-scanner

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd gestion_stock_ui/hb_electronics
          sonar-scanner \
            -Dsonar.projectKey=frontend \
            -Dsonar.projectName=frontend \
            -Dsonar.sources=src \
            -Dsonar.javascript.lcov.reportPaths=coverage/hb_electronics/lcov.info \
            -Dsonar.host.url=https://gestionstock-sonarqube.onrender.com \
            -Dsonar.login=$SONAR_TOKEN \

  #deploy:
   # name: Deploy Frontend
  #  runs-on: ubuntu-latest
   # needs: [ build-image ]
    #steps:

     # - name: Create deployment folder
      # run: ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} "mkdir -p ci-cd"

        # - name: Copy docker-compose file
      # run: scp -oStrictHostKeyChecking=no docker-compose.yml ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }}:ci-cd/docker-compose.yml

        #- name: Set ENV variable and deploy
          #run: |
          #  ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} <<EOF
          # cd ci-cd
          # docker compose -f docker-compose.yml pull -q
          # docker compose -f docker-compose.yml up -d
          # EOF